{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/UI/Button/Button.module.css","containers/Auth/Auth.module.css","components/UI/Input/Input.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","components/UI/Loader/Loader.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Select/Select.module.css","containers/QuizList/QuizList.module.css","components/UI/Backdrop/Backdrop.js","components/Navigation/MenuToggle/MenuToggle.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","axios/axios-quiz.js","store/actions/quiz.js","store/actions/actionTypes.js","containers/Quiz/Quiz.js","components/UI/Input/Input.js","store/actions/auth.js","containers/Auth/Auth.js","components/UI/Select/Select.js","form/formFramework.js","hoc/Auxiliary/Auxiliary.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","containers/QuizList/QuizList.js","components/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","Backdrop","props","className","classes","onClick","MenuToggle","cls","isOpen","push","open","join","onToggl","Drawer","clickHandler","onClose","links","map","item","index","key","to","exact","exect","activeClassName","active","label","this","close","isAuthenticated","Fragment","renderLinks","onToggle","Component","Layout","state","menu","toggleMenuHandler","setState","toggeBlurHandler","console","log","children","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","i","AciveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","niceAnswer","results","quiz","length","restart","Loader","axios","create","baseURL","fetchQuizesStart","fetchQuizesSucces","quizes","fetchQuizesError","e","error","fetchQuizSuccess","quizSetState","answerState","Quiz","fetchQuizById","match","params","testRestart","QuizWrapper","loading","isFinished","ActiveQuiz","activeQuestion","quizAnswerClick","globalStore","dispachhhh","dispatch","a","get","response","data","answerId","getState","Object","keys","rightAnswerId","timeout","window","setTimeout","isQouzFinished","questionNumber","clearTimeout","isInvalid","valid","touched","shouldValidate","Input","htmlFor","Math","random","invalid","value","onChange","errorMessage","autoLogout","time","logout","localStorage","removeItem","authSuccess","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","regiterHandler","submitHandler","ev","preventDefault","validateControl","isValid","trim","is","onChengeHandler","controlName","control","target","forEach","name","onSubmit","AuthForm","renderInputs","isLogin","authData","returnSecureToken","url","post","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","Select","options","option","createControl","config","validate","isValide","validateForm","isFormVlid","hasOwnProperty","Auxiliary","createOptionControl","number","createFormControls","option1","option2","option3","option4","QuizCreator","sibmitHandler","event","addQuestionHandler","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","selectChangeHandler","select","renderControls","QuizList","renderQuizes","fetchQuizesssss","Logout","App","autoLogin","routes","path","component","withRouter","getItem","Boolean","location","hostname","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.76fc95b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__1cs_V\",\"close\":\"Drawer_close__3aORb\",\"active\":\"Drawer_active__2l89d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__1wckJ\",\"open\":\"MenuToggle_open__1cIbU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__2uo7V\",\"QuizWrapper\":\"Quiz_QuizWrapper__3noj3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AciveQuiz\":\"ActiveQuiz_AciveQuiz__16fTQ\",\"Question\":\"ActiveQuiz_Question__3rOaA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__7G8A5\",\"success\":\"AnswerItem_success__VB3U3\",\"error\":\"AnswerItem_error__dMCmy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__2mgqV\",\"success\":\"FinishedQuiz_success__12k9s\",\"error\":\"FinishedQuiz_error__2D01l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__omK1-\",\"error\":\"Button_error__17vFa\",\"success\":\"Button_success__9uqqQ\",\"primary\":\"Button_primary__xzo9v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__2O-xN\",\"AuthForm\":\"Auth_AuthForm__3I9bV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1hxWq\",\"invalid\":\"Input_invalid__NNTq5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__fzZq2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__h-xW_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__1o-0l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__Cx__R\",\"Loader1\":\"Loader_Loader1__2oFbZ\",\"Loader2\":\"Loader_Loader2__2CwaA\",\"Loader3\":\"Loader_Loader3__Oy7XQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__n_b0M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__1OEJP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__y8O7z\"};","import React from 'react'\r\nimport classes from './Backdrop.module.css'\r\n\r\n\r\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick}></div>;\r\n\r\nexport default Backdrop","import React from 'react'\r\nimport classes from './MenuToggle.module.css'\r\n// import Button from '../UI/Button/Button'\r\n\r\nconst MenuToggle = (props) => {\r\n    const cls = [\r\n        classes.MenuToggle,\r\n        'fa',\r\n    ]\r\n\r\n    if(props.isOpen){\r\n        cls.push('fa-times')\r\n        cls.push(classes.open)\r\n    }else{\r\n        cls.push('fa-bars')\r\n    }\r\n\r\n    return(\r\n        <i \r\n            className={cls.join(' ')}\r\n            onClick={props.onToggl}\r\n        ></i>\r\n    )\r\n}\r\n\r\n\r\nexport default MenuToggle\r\n","import React, {Component} from 'react'\r\nimport classes from './Drawer.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\nimport MenuToggle from '../MenuToggle/MenuToggle'\r\n\r\n\r\nclass Drawer extends Component{\r\n\r\n    clickHandler = () =>{\r\n        this.props.onClose()\r\n    }\r\n\r\n    renderLinks(links){\r\n        \r\n        return links.map((item, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <NavLink\r\n                        to={item.to}\r\n                        exact={item.exect}\r\n                        activeClassName={classes.active}\r\n                        onClick={this.clickHandler}\r\n                    >\r\n                        {item.label}      \r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        const cls = [\r\n            classes.Drawer\r\n        ]\r\n\r\n        if(!this.props.isOpen){\r\n            cls.push(classes.close)\r\n        }\r\n\r\n        const links = [\r\n            {\r\n                to: '/',\r\n                label: 'Список',\r\n                exect: true\r\n            }\r\n            \r\n        \r\n        ]\r\n\r\n        if(this.props.isAuthenticated){\r\n            links.push({\r\n                to: '/quiz-creator',\r\n                label: 'Создать тест',\r\n                exect: false\r\n            })\r\n            links.push({\r\n                to: '/logout',\r\n                label: 'Выйти',\r\n                exect: false\r\n            })\r\n        }else{\r\n            links.push(\r\n                {\r\n                    to: '/auth',\r\n                    label: 'Авторизация',\r\n                    exect: false\r\n                })\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n            {this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null}    \r\n            \r\n            <nav className={cls.join(' ')}>\r\n                <ul>\r\n                    {this.renderLinks(links)}\r\n                </ul>\r\n            </nav>\r\n            <MenuToggle\r\n                    onToggl={this.props.onToggle}\r\n                    isOpen={this.props.isOpen}\r\n            />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Drawer","import React, {Component} from 'react'\r\nimport classes from './Layout.module.css'\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer'\r\nimport {connect} from 'react-redux'\r\n\r\nclass Layout extends Component{\r\n\r\n    state = {\r\n        menu: false\r\n    }\r\n\r\n    toggleMenuHandler = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    toggeBlurHandler = () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n\r\n    render(){\r\n        console.log(this.props)\r\n\r\n        return (\r\n            <div className={classes.Layout}>\r\n                <Drawer\r\n                    isOpen={this.state.menu}\r\n                    onClose={this.toggeBlurHandler}\r\n                    onToggle={this.toggleMenuHandler}\r\n                    isAuthenticated={this.props.isAuthenticated}\r\n                />\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProprs(state){  \r\n    return {\r\n      isAuthenticated: !!state.auth.token\r\n    }\r\n  }\r\nexport default connect(mapStateToProprs)(Layout) ","import React from 'react'\r\nimport classes from './AnswerItem.module.css'\r\n\r\n\r\nconst AnswerItem = props => {\r\n\r\n    const cls = [classes.AnswerItem]\r\n\r\n    if(props.state){\r\n        cls.push(classes[props.state])\r\n    }\r\n    \r\n    // console.log('AnswerItem', props)\r\n    \r\n    return (\r\n    <li className={cls.join(\" \")} onClick={() => props.onAnswerClick(props.answer.id)}>\r\n        {props.answer.text}\r\n    </li>\r\n)}\r\n\r\nexport default AnswerItem","import React from 'react'\r\nimport classes from './AnswersList.module.css'\r\nimport AnswerItem from './AnswerItem/AnswerItem'\r\n\r\n\r\n\r\nconst AnswersList = props => {\r\n    // console.log(props);\r\n    \r\n    return(\r\n    <ul className={classes.AnswersList}>\r\n        {props.answers.map(\r\n            (i, index)=>(<AnswerItem key={index} state={props.state ? props.state[i.id] : null} answer={i} onAnswerClick={props.onAnswerClick}/>)  \r\n        )}\r\n    </ul>\r\n)}\r\nexport default AnswersList","import React from 'react'\r\nimport classes from './ActiveQuiz.module.css'\r\nimport AnswerList from './AnswersList/AnswersList'\r\n\r\n\r\nconst AciveQuiz = props => (// компонет текущего вопроса\r\n    //получаем пропс со всеми потрохами что передавали\r\n    <div className={classes.AciveQuiz}>\r\n        <p className={classes.Question}>\r\n            <span>\r\n                <strong>{props.answerNumber + \".\"}</strong>\r\n                &nbsp;{props.question}\r\n            </span>\r\n            <small> {props.answerNumber} из {props.quizLength} </small>\r\n        </p>\r\n        <AnswerList\r\n            state={props.state}\r\n            answers={props.answers}\r\n            onAnswerClick={props.onAnswerClick}\r\n        />\r\n    </div>\r\n)\r\n\r\nexport default AciveQuiz","import React from 'react'\r\nimport classes from './Button.module.css'\r\n\r\n\r\nconst Button = (props) => {\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ]\r\n\r\n    return (\r\n        <button\r\n            onClick={props.onClick}\r\n            className={cls.join(' ')}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport classes from './FinishedQuiz.module.css'\r\nimport Button from '../UI/Button/Button'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst FinishedQuiz = props =>{\r\n\r\n    let niceAnswer = 0\r\n    for (let i in props.results){\r\n        if(props.results[i] === 'success'){\r\n            niceAnswer++\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.FinishedQuiz}>\r\n            <ul>\r\n                {props.quiz.map((item, index) => {\r\n                    const cls = ['fa', props.results[index + 1] === 'error' ? 'fa-times' : 'fa-check', classes[props.results[index + 1]]];\r\n                     \r\n                    return (\r\n                        <li key={index}>\r\n                            <strong>\r\n                                {index + 1}.&nbsp;{item.question}\r\n                            </strong>\r\n                            <i className={cls.join(' ')}></i>\r\n\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul> \r\n            <p>Правильно {niceAnswer} из {props.quiz.length}</p>\r\n\r\n            <div>\r\n                <Button type='primory' onClick={props.restart}>Повторить</Button>\r\n                <Link to='/'>\r\n                <Button type='success' onClick={null}>Перейти в список тестов</Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinishedQuiz","import React from 'react'\r\nimport classes from './Loader.module.css'\r\n\r\nconst Loader = () => \r\n<div className={classes.Loader}>\r\n    <div/>\r\n    <div/>\r\n    <div/>\r\n    <div/>\r\n</div>\r\n\r\n\r\nexport default Loader","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://react-quiz-1a628.firebaseio.com/'\r\n})","import axios from '../../axios/axios-quiz'\r\nimport {\r\n    FETCH_QUIZES_START, \r\n    FETCH_QUIZES_SUCCESS, \r\n    FETCH_QUIZES_ERROR, \r\n    FETCH_QUIZ_SUCCESS, \r\n    QUIZ_SET_STATE, \r\n    FINISH_QUIZ,\r\n    QUIZ_NEXT_QUESTION,\r\n    QUIZ_RETRY\r\n} from '../actions/actionTypes'\r\n\r\n\r\nexport function fetchQuizes (){\r\n    return async dispatch => {\r\n    setTimeout(async()=>{\r\n        dispatch(fetchQuizesStart())\r\n        try{\r\n            const response = await axios.get('/quizes.json')\r\n            const quizes = []\r\n            Object.keys(response.data).forEach((key, index) => {\r\n                quizes.push({\r\n                    id: key,\r\n                    name: `Test № ${index + 1}`,\r\n                })\r\n            })\r\n            dispatch(fetchQuizesSucces(quizes))\r\n        }catch (e){\r\n            dispatch(fetchQuizesError(e))\r\n        }\r\n        }, 1111)\r\n    }\r\n}\r\n\r\nexport function fetchQuizById(id){\r\n    console.log(id)\r\n    return async dispatch => {\r\n        dispatch (fetchQuizesStart())\r\n        try {\r\n            const response = await axios.get(`/quizes/${id}.json`)\r\n                const quiz = response.data\r\n\r\n            dispatch(fetchQuizSuccess(quiz))\r\n        }catch (e){\r\n            dispatch(fetchQuizesError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchQuizesStart(){\r\n    return {\r\n        type: FETCH_QUIZES_START\r\n\r\n    }\r\n}\r\n\r\nexport function fetchQuizesSucces(quizes){\r\n    return {\r\n        type: FETCH_QUIZES_SUCCESS,\r\n        quizes\r\n\r\n    }\r\n}\r\n\r\nexport function fetchQuizesError(e){\r\n    return {\r\n        type: FETCH_QUIZES_ERROR,\r\n        error: e\r\n    }\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz){\r\n    return {\r\n        type: FETCH_QUIZ_SUCCESS,\r\n        quiz\r\n    }\r\n}\r\n\r\nexport function quizSetState(answerState, results){\r\n    return {\r\n        type: QUIZ_SET_STATE,\r\n        answerState,\r\n        results\r\n    }\r\n}\r\nexport function finishedQuiz(){\r\n    return {\r\n        type: FINISH_QUIZ,\r\n        isFinished: true\r\n    }\r\n}\r\nexport function quizNextQuestion(questionNumber){\r\n    return {\r\n        type: QUIZ_NEXT_QUESTION,\r\n        questionNumber\r\n    }\r\n}\r\nexport function testRestart(){\r\n    return {\r\n        type: QUIZ_RETRY\r\n    }\r\n}\r\nexport function quizAnswerClick(answerId){\r\n    return (dispatch, getState)=> {\r\n        const state = getState().quiz\r\n        if(state.answerState){ // проверка есть ли что то в ансверСтейте\r\n            const key = Object.keys(state.answerState)[0] //если да, создаем переменную в которую заносим ключь из обьекта answerState (тот айди ответа от пользователя)\r\n            if(state.answerState[key] === 'success'){ // если \r\n                return\r\n            }\r\n        }\r\n        const question = state.quiz[state.activeQuestion]; // константа которая хранит в себе текущий вопрос\r\n        const results = state.results;\r\n        if(question.rightAnswerId === answerId){ // поверяем правильный ответ в текущем вопрос с тем ответом что дал пользователь\r\n            if(!results[question.id]){\r\n                results[question.id] = 'success';\r\n            }\r\n\r\n            dispatch(quizSetState({[answerId] : 'success'}, results))\r\n\r\n\r\n            const timeout = window.setTimeout(()=>{ // после изменения цветв запускается таймаут на 1 секунду\r\n                if(isQouzFinished(state)){  //Запускаем функцию проверки на последий вопрос из имеющихся\r\n                    dispatch(finishedQuiz())\r\n                }else{\r\n                    dispatch(quizNextQuestion(state.activeQuestion + 1))\r\n                }\r\n                window.clearTimeout(timeout); //очищаем таймаут для экономии памяти\r\n            }, 1000)\r\n            \r\n        }else{\r\n            results[question.id] = 'error';\r\n            dispatch(quizSetState({[answerId] : 'error'}, results))         \r\n        }\r\n    }\r\n}\r\n\r\nfunction isQouzFinished(state){\r\n    return  state.activeQuestion + 1 === state.quiz.length\r\n}","export const FETCH_QUIZES_START = \"FETCH_QUIZES_START\";\r\nexport const FETCH_QUIZES_SUCCESS = \"FETCH_QUIZES_SUCCESS\";\r\nexport const FETCH_QUIZES_ERROR = \"FETCH_QUIZES_ERROR\";\r\nexport const FETCH_QUIZ_SUCCESS = \"FETCH_QUIZ_SUCCESS\";\r\nexport const QUIZ_SET_STATE = \"QUIZ_SET_STATE\";\r\nexport const FINISH_QUIZ = \"FINISH_QUIZ\";\r\nexport const QUIZ_NEXT_QUESTION = \"QUIZ_NEXT_QUESTION\";\r\nexport const QUIZ_RETRY = \"QUIZ_RETRY\";\r\nexport const CREATE_QUIZ_QUESTION = \"CREATE_QUIZ_QUESTION\";\r\nexport const RESET_QUIZ_CREATION = \"RESET_QUIZ_CREATION\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from 'react'\r\nimport classes from './Quiz.module.css'\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\r\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport {connect} from 'react-redux'\r\nimport {fetchQuizById, quizAnswerClick, testRestart} from '../../store/actions/quiz'\r\n\r\n\r\n\r\n\r\nclass Quiz extends Component{\r\n    componentDidMount(){\r\n        this.props.fetchQuizById(this.props.match.params.id)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.testRestart()\r\n    }\r\n\r\n    render(){\r\n        console.log(this.props);\r\n\r\n        return(\r\n            <div className={classes.Quiz}>\r\n                <div className={classes.QuizWrapper}>\r\n                    <h1>Ответьте на все вопросы</h1>\r\n                    {this.props.loading || !this.props.quiz\r\n                        ? <Loader/> \r\n                        : this.props.isFinished \r\n                            ? <FinishedQuiz results={this.props.results} quiz={this.props.quiz} restart={this.props.testRestart}/> \r\n                            : <ActiveQuiz // создаем блок вопроса и ответов\r\n                            question={this.props.quiz[this.props.activeQuestion].question} //передаем текст текущего вопроса (при вервой загрузке - первый вопрос)\r\n                            answers={this.props.quiz[this.props.activeQuestion].answers} // передаем массив всех вариантов ответов\r\n                            onAnswerClick={this.props.quizAnswerClick}    // передаем функцию которая будет ловить выбраный вариант пользователем. Принимает в себя id ответа пользователя\r\n                            quizLength={this.props.quiz.length} // передаем общее количесво существующих вопросов (используем в месте \"n из n\")\r\n                            answerNumber={this.props.activeQuestion + 1} // передаем номер текущего вопроса (используем в месте \"n из n\")\r\n                            state = {this.props.answerState} // передаем null если пользователь не отвтил или массив с вариантом ответа который выбрал пользователь + сообщение верный ли был ответ (используем в подсветке нужным цветом)}\r\n                            />  \r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(globalStore){\r\n    return {\r\n        results: globalStore.quiz.results,\r\n        isFinished: globalStore.quiz.isFinished,\r\n        activeQuestion: globalStore.quiz.activeQuestion,\r\n        answerState: globalStore.quiz.answerState,\r\n        quiz: globalStore.quiz.quiz,\r\n        loading: globalStore.quiz.loading\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispachhhh){\r\n    return {\r\n        fetchQuizById: id => dispachhhh(fetchQuizById(id)),\r\n        quizAnswerClick: answerId =>  dispachhhh(quizAnswerClick(answerId)),\r\n        testRestart: ()=> dispachhhh(testRestart())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)","import React from 'react'\r\nimport classes from './Input.module.css'\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}){\r\n    return !valid && shouldValidate && touched\r\n}\r\n\r\nconst Input = props => {\r\n    const cls = [\r\n        classes.Input\r\n    ]\r\n    const htmlFor = `${props.type || 'text'}-${Math.random()}`;\r\n\r\n    if(isInvalid(props)){\r\n        cls.push(classes.invalid)\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <input \r\n                type={props.type || 'text'} \r\n                value={props.value} \r\n                disabled={props.disabled || false} \r\n                id={htmlFor}\r\n                onChange={props.onChange}\r\n            >\r\n            </input>\r\n            {\r\n                isInvalid(props) ? <span>{props.errorMessage || 'Ошибка!'}</span> : null\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Input","import axios from 'axios'\r\nimport {\r\n    AUTH_SUCCESS,\r\n    AUTH_LOGOUT\r\n} from '../actions/actionTypes'\r\n\r\nexport function auth(email, password, isLogin){\r\n    return async dispatch =>{\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        }\r\n        let url =   'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAF3lehlrWgOy4gQx1CqOEDgVvGO6V4Tbo';\r\n\r\n        if(isLogin){\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAF3lehlrWgOy4gQx1CqOEDgVvGO6V4Tbo';\r\n        }\r\n        const response = await axios.post(url, authData);\r\n        const data = response.data\r\n        const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\r\n\r\n        localStorage.setItem('token', data.idToken)\r\n        localStorage.setItem('userId', data.localId)\r\n        localStorage.setItem('expirationDate', expirationDate)\r\n\r\n        dispatch(authSuccess(data.idToken))\r\n        dispatch(autoLogout(data.expiresIn))\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nexport function autoLogout(time){\r\n    return dispatch => {\r\n        setTimeout(()=>{\r\n            dispatch(logout())\r\n        }, time * 1000)\r\n    }\r\n\r\n}\r\n\r\nexport function autoLogin(){\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token')\r\n        if(!token){\r\n            dispatch(logout())\r\n        } else{\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n            if(expirationDate <= new Date()){\r\n                dispatch(logout())\r\n            }else{\r\n                dispatch(authSuccess(token))\r\n                dispatch(autoLogout((expirationDate.getTime() - new Date().getTime())/1000))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function logout(){\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('userId')\r\n    localStorage.removeItem('expirationDate')\r\n\r\n    return {\r\n        type: AUTH_LOGOUT\r\n\r\n    }\r\n}\r\n\r\nexport function authSuccess(token){\r\n    return {\r\n        type: AUTH_SUCCESS,\r\n        token\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react'\r\nimport classes from './Auth.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport is from 'is_js'\r\nimport {connect} from 'react-redux'\r\nimport {auth} from '../../store/actions/auth'\r\n\r\nclass Auth extends Component{\r\n    \r\n    state = {\r\n        isFormValid: false,\r\n        formControls: {\r\n            email: {\r\n                value: '',\r\n                type: 'email',\r\n                label: 'Email',\r\n                errorMessage: 'Введите корректній email!',\r\n                valid: false,\r\n                touched: false,\r\n                validation:{\r\n                    required: true,\r\n                    email: true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label: 'Пароль',\r\n                errorMessage: 'Введите корректній пароль!',\r\n                valid: false,\r\n                touched: false,\r\n                validation:{\r\n                    required: true,\r\n                    minLength: 6\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loginHandler = () => {\r\n        this.props.auth(this.state.formControls.email.value, this.state.formControls.password.value, true)\r\n    }\r\n\r\n    regiterHandler = () => {\r\n        this.props.auth(this.state.formControls.email.value, this.state.formControls.password.value, false)\r\n    }\r\n\r\n    submitHandler = (ev) => {\r\n        ev.preventDefault()\r\n    }\r\n\r\n    validateControl = (value, validation) => {\r\n        if(!validation){\r\n            return true\r\n        }\r\n        let isValid = true\r\n        if(validation.required){\r\n            isValid =  value.trim() !== \"\" && isValid\r\n        }\r\n        if(validation.email){\r\n            isValid = is.email(value) && isValid\r\n        }\r\n        if(validation.minLength){\r\n            isValid =  value.length >= validation.minLength && isValid\r\n        }\r\n\r\n        return isValid\r\n    }\r\n\r\n    onChengeHandler = (ev, controlName) => {\r\n        const formControls = {...this.state.formControls};\r\n        const control = { ...formControls[controlName]};\r\n\r\n        control.value = ev.target.value;\r\n        control.touched = true;\r\n        control.valid = this.validateControl(control.value, control.validation);\r\n        formControls[controlName] = control;\r\n        let isFormValid = true;\r\n\r\n        Object.keys(formControls).forEach(name => {\r\n            isFormValid = formControls[name].valid && isFormValid\r\n        })\r\n\r\n\r\n        this.setState({\r\n            formControls, isFormValid\r\n        })\r\n    }\r\n\r\n    renderInputs(){\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName]            \r\n            return (\r\n                <Input\r\n                    key={controlName + index}\r\n                    type = {control.type}\r\n                    value = {control.value}\r\n                    valid = {control.valid}\r\n                    touched = {control.touched}\r\n                    label = {control.label}\r\n                    shouldValidate = {!!control.validation}\r\n                    errorMessage = {control.errorMessage}\r\n                    onChange={ev => this.onChengeHandler(ev, controlName)}\r\n                />\r\n            )\r\n        })\r\n\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Auth}>\r\n                <div>\r\n                    <h1>Авторизация</h1>\r\n\r\n                    <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n\r\n                        {this.renderInputs()}\r\n                        <Button type='success' onClick={this.loginHandler} disabled={!this.state.isFormValid}>Войти</Button>\r\n                        <Button type='primory' onClick={this.regiterHandler} disabled={!this.state.isFormValid}>Зарегистрироваться</Button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n  function mapDispatchToProps(dispachhhh){\r\n    return {\r\n        auth: (email, password, isLogin) => dispachhhh(auth(email, password, isLogin)),\r\n  \r\n    }\r\n  }\r\nexport default connect(null, mapDispatchToProps)(Auth)","import React from 'react'\r\nimport classes from './Select.module.css'\r\n\r\nconst Select = props => {\r\n    const htmlFor = `${props.label}-${Math.random()}`\r\n  \r\n    return (\r\n      <div className={classes.Select}>\r\n        <label htmlFor={htmlFor}>{props.label}</label>\r\n        <select\r\n          id={htmlFor}\r\n          value={props.value}\r\n          onChange={props.onChange}\r\n        >\r\n          { props.options.map((option, index) => {\r\n            return (\r\n              <option\r\n                value={option.value}\r\n                key={option.value + index}\r\n              >\r\n                {option.text}\r\n              </option>\r\n            )\r\n          }) }\r\n        </select>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default Select","export function createControl(config, validation){\r\n  return{\r\n      ...config,\r\n      validation,\r\n      valid: !validation,\r\n      touched: false,\r\n      value: ''\r\n  }\r\n}\r\n\r\nexport function validate(value, validation = null){\r\n  if(!validation){\r\n      return true\r\n  }\r\n  let isValide = true\r\n\r\n  if(validation.required){\r\n      isValide = value.trim() !== \"\" && isValide\r\n  }\r\n  return isValide\r\n}\r\n\r\n\r\nexport function validateForm(formControls){\r\n  let isFormVlid = true;\r\n\r\n  for(let control in formControls){\r\n      if(formControls.hasOwnProperty(control)){\r\n          isFormVlid = formControls[control].valid && isFormVlid\r\n      }\r\n  }\r\n\r\n  return isFormVlid\r\n}\r\n\r\n","const Auxiliary = props => props.children\r\n\r\nexport default Auxiliary","import React, {Component} from 'react'\r\nimport classes from './QuizCreator.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport Select from '../../components/UI/Select/Select'\r\nimport {createControl, validate, validateForm} from '../../form/formFramework'\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary'\r\nimport {connect} from 'react-redux'\r\nimport {createQuizQuestion, finishCreateQuiz} from '../../store/actions/create'\r\n\r\n\r\nfunction createOptionControl(number) {\r\n  return createControl({\r\n    label: `Вариант ${number}`,\r\n    errorMessage: 'Значение не может быть пустым',\r\n    id: number\r\n  }, {required: true})\r\n}\r\n\r\nfunction createFormControls() {\r\n  return {\r\n    question: createControl({\r\n      label: 'Введите вопрос',\r\n      errorMessage: 'Вопрос не может быть пустым'\r\n    }, {required: true}),\r\n    option1: createOptionControl(1),\r\n    option2: createOptionControl(2),\r\n    option3: createOptionControl(3),\r\n    option4: createOptionControl(4)\r\n  }\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n\r\n  state = {\r\n    isFormValid: false,\r\n    rightAnswerId: 1,\r\n    formControls: createFormControls()\r\n  }\r\n\r\n  sibmitHandler = event => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  addQuestionHandler = event => {\r\n    event.preventDefault()\r\n\r\n    const {question, option1, option2, option3, option4} = this.state.formControls\r\n\r\n    const questionItem = {\r\n      question: question.value,\r\n      id: this.props.quiz.length + 1,\r\n      rightAnswerId: this.state.rightAnswerId,\r\n      answers: [\r\n        {text: option1.value, id: option1.id},\r\n        {text: option2.value, id: option2.id},\r\n        {text: option3.value, id: option3.id},\r\n        {text: option4.value, id: option4.id}\r\n      ]\r\n    }\r\n\r\n    this.props.createQuizQuestion(questionItem)\r\n    this.setState({\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n      formControls: createFormControls()\r\n    })\r\n  }\r\n\r\n  createQuizHandler =  event => {\r\n    event.preventDefault()\r\n\r\n        this.setState({\r\n          isFormValid: false,\r\n          rightAnswerId: 1,\r\n          formControls: createFormControls()\r\n        })\r\n\r\n        this.props.finishCreateQuiz()\r\n\r\n  }\r\n\r\n  changeHandler = (value, controlName) => {\r\n    const formControls = { ...this.state.formControls }\r\n    const control = { ...formControls[controlName] }\r\n\r\n    control.touched = true\r\n    control.value = value\r\n    control.valid = validate(control.value, control.validation)\r\n\r\n    formControls[controlName] = control\r\n\r\n    this.setState({\r\n      formControls,\r\n      isFormValid: validateForm(formControls)\r\n    })\r\n  }\r\n\r\n  renderControls() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName]\r\n\r\n      return (\r\n        <Auxiliary key={controlName + index}>\r\n          <Input\r\n            label={control.label}\r\n            value={control.value}\r\n            valid={control.valid}\r\n            shouldValidate={!!control.validation}\r\n            touched={control.touched}\r\n            errorMessage={control.errorMessage}\r\n            onChange={event => this.changeHandler(event.target.value, controlName)}\r\n          />\r\n          { index === 0 ? <hr /> : null }\r\n        </Auxiliary>\r\n      )\r\n    })\r\n  }\r\n\r\n  selectChangeHandler = event => {\r\n    this.setState({\r\n      rightAnswerId: +event.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const select = <Select\r\n      label=\"Выберите правильный ответ\"\r\n      value={this.state.rightAnswerId}\r\n      onChange={this.selectChangeHandler}\r\n      options={[\r\n        {text: 1, value: 1},\r\n        {text: 2, value: 2},\r\n        {text: 3, value: 3},\r\n        {text: 4, value: 4}\r\n      ]}\r\n    />\r\n\r\n    return (\r\n      <div className={classes.QuizCreator}>\r\n        <div>\r\n          <h1>Создание теста</h1>\r\n\r\n          <form onSubmit={this.submitHandler}>\r\n\r\n            { this.renderControls() }\r\n\r\n            { select }\r\n\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.addQuestionHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Добавить вопрос\r\n            </Button>\r\n\r\n            <Button\r\n              type=\"success\"\r\n              onClick={this.createQuizHandler}\r\n              disabled={this.props.quiz.length === 0}\r\n            >\r\n              Создать тест\r\n            </Button>\r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(globalStore){\r\n  return {\r\n    quiz: globalStore.create.quiz\r\n  }\r\n}\r\nfunction mapDispatchToProps(dispachhhh){\r\n  return {\r\n      createQuizQuestion: item => dispachhhh(createQuizQuestion(item)),\r\n      finishCreateQuiz: () => dispachhhh(finishCreateQuiz())\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator)","import {\r\n    CREATE_QUIZ_QUESTION,\r\n    RESET_QUIZ_CREATION\r\n} from '../actions/actionTypes'\r\nimport axios from '../../axios/axios-quiz'\r\n\r\n\r\nexport function createQuizQuestion(item){\r\n    return {\r\n        type: CREATE_QUIZ_QUESTION,\r\n        item\r\n    }\r\n}\r\nexport function resetQuizCreation(){\r\n    return {\r\n        type: RESET_QUIZ_CREATION\r\n    }\r\n}\r\nexport function finishCreateQuiz(item){\r\n    return async (dispatch, getState) => {\r\n        await axios.post('/quizes.json', getState().create.quiz);\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport classes from './QuizList.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport {connect} from 'react-redux'\r\nimport {fetchQuizes} from '../../store/actions/quiz'\r\n\r\n\r\n\r\nclass QuizList extends Component{ \r\n    renderQuizes = () =>{     \r\n        console.log(this.props)   \r\n   \r\n        return this.props.quizes.map(item=>{\r\n            return (\r\n                <li key={item.id}>\r\n                    <NavLink to={'/quiz/' + item.id}>\r\n                        {item.name}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.props.fetchQuizesssss()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.QuizList}>\r\n                <h1>Список тестов</h1>\r\n                <br></br>\r\n                <ul>\r\n                    {this.props.loading && this.props.quizes.length !== 0 ? <Loader/> : this.renderQuizes()}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(globalStore){\r\n    return {\r\n            quizes: globalStore.quiz.quizes,\r\n            loading: globalStore.quiz.loading\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispachhhh){\r\n    return {\r\n        fetchQuizesssss: () => dispachhhh(fetchQuizes())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)","import React, {Component} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {logout} from '../../store/actions/auth'\r\n\r\nclass Logout extends Component {\r\n    componentDidMount(){\r\n        this.props.logout()\r\n    } \r\n\r\n    render(){\r\n        return <Redirect to={'/'}></Redirect>\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return {\r\n        logout: ()=>dispatch(logout())\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(Logout)","import React , {Component} from 'react';\nimport Leyout from './hoc/Layout/Layout';\nimport {Route, Switch, Redirect, withRouter} from 'react-router-dom'\nimport Quiz from './containers/Quiz/Quiz';\nimport Auth from './containers/Auth/Auth';\nimport QuizCreator from './containers/QuizCreator/QuizCreator';\nimport QuizList from './containers/QuizList/QuizList';\nimport Logout from './components/Logout/Logout';\nimport {autoLogin} from  './store/actions/auth'\n\nimport {connect} from 'react-redux';\n\n\n\nclass App extends Component {\n  \n  componentDidMount(){\n    this.props.autoLogin()\n  }\n\n  render(){\n\n    let routes = (\n            <Switch>\n            <Route path='/auth' component={Auth}></Route>\n            <Route path='/quiz/:id' component={Quiz}></Route>\n            <Route path='/' exact component={QuizList}></Route>\n            <Redirect to='/'></Redirect>\n          </Switch>\n    )\n    if(this.props.isAuthenticated){\n      routes = (\n        <Switch>\n          <Route path='/quiz-creator' component={QuizCreator}></Route>\n          <Route path='/quiz/:id' component={Quiz}></Route>\n          <Route path='/logout' component={Logout}/>\n          <Route path='/' component={QuizList}></Route>\n          <Redirect to='/'></Redirect>\n        </Switch>\n      )\n    }\n    return (\n      \n        <Leyout>\n            {routes}\n        </Leyout>\n    )\n  }\n}\nfunction mapStateToProprs(state){  \n  return {\n    isAuthenticated: !!state.auth.token\n  }\n}\nfunction mapDispatchToProps(dispachhhh){\n  return {\n    autoLogin: () => dispachhhh(autoLogin())\n  }\n}\n\nexport default withRouter(connect(mapStateToProprs, mapDispatchToProps)(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n    FETCH_QUIZES_START, \r\n    FETCH_QUIZES_SUCCESS, \r\n    FETCH_QUIZES_ERROR, \r\n    FETCH_QUIZ_SUCCESS, \r\n    QUIZ_SET_STATE, \r\n    FINISH_QUIZ,\r\n    QUIZ_NEXT_QUESTION,\r\n    QUIZ_RETRY\r\n} from '../actions/actionTypes'\r\nconst initialState = {\r\n    quizes: [],\r\n    loading: false,\r\n    error: null,\r\n    results: {  //обьект хранящий в себе все ответы пользователя\r\n    },\r\n    isFinished: false, // переменная \"закончился ли список вопросов\"\r\n    activeQuestion: 0, //текущий вопрос\r\n    answerState: null, // был ли ответ на вопрос от пользователя, если был записывает в формате {[id который указал ползватель] : состояние (правильно/неправильно)}\r\n    quiz : null\r\n}\r\n\r\nexport default function quizReducer(state = initialState, action){\r\n\r\n    switch (action.type){\r\n        case FETCH_QUIZES_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_QUIZES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                quizes: action.quizes\r\n            }\r\n        case FETCH_QUIZES_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }    \r\n        case FETCH_QUIZ_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                quiz: action.quiz\r\n            }\r\n        case QUIZ_SET_STATE:\r\n            return {\r\n                ...state,\r\n                answerState: action.answerState, \r\n                results: action.results\r\n            }\r\n        case FINISH_QUIZ:\r\n            return{\r\n                ...state,\r\n                isFinished: action.isFinished\r\n            }\r\n        case QUIZ_NEXT_QUESTION:\r\n            return{\r\n                ...state,\r\n                answerState: null,\r\n                activeQuestion: action.questionNumber\r\n            } \r\n        case QUIZ_RETRY:\r\n            return{\r\n                ...state,\r\n                results: {},\r\n                isFinished: false, \r\n                activeQuestion: 0,\r\n                answerState: null\r\n            }\r\n\r\n            \r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import {\r\n    CREATE_QUIZ_QUESTION,\r\n    RESET_QUIZ_CREATION\r\n} from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    quiz: []\r\n}\r\nexport default function createReducer(state = initialState, action){\r\n    switch(action.type){\r\n        case CREATE_QUIZ_QUESTION:\r\n            return {\r\n                ...state,\r\n                quiz: [...state.quiz, action.item]\r\n            }\r\n        case RESET_QUIZ_CREATION:\r\n            return {\r\n                ...state,\r\n                quiz: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    AUTH_SUCCESS,\r\n    AUTH_LOGOUT\r\n} from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    token: null\r\n}\r\nexport default function authReducer(state = initialState, action){\r\n    console.log(state)\r\n    switch(action.type){\r\n        case AUTH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        case AUTH_LOGOUT:\r\n            return {\r\n                ...state,\r\n                token: null\r\n            }   \r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport quizReducer from './quiz'\r\nimport createReducer from './create'\r\nimport authReducer from './auth'\r\n\r\n\r\nexport default combineReducers ({\r\n    quiz: quizReducer,\r\n    create: createReducer,\r\n    auth: authReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\nimport {createStore, compose, applyMiddleware} from 'redux'\nimport rootReducer from './/store/reducers/rootReducer'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\n\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    }) : compose;\n\n\n\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App></App>\n        </BrowserRouter>\n    </Provider>\n)\n\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}